var h=Object.defineProperty;var u=(t,e,o)=>e in t?h(t,e,{enumerable:!0,configurable:!0,writable:!0,value:o}):t[e]=o;var i=(t,e,o)=>(u(t,typeof e!="symbol"?e+"":e,o),o);(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))d(r);new MutationObserver(r=>{for(const s of r)if(s.type==="childList")for(const a of s.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&d(a)}).observe(document,{childList:!0,subtree:!0});function o(r){const s={};return r.integrity&&(s.integrity=r.integrity),r.referrerpolicy&&(s.referrerPolicy=r.referrerpolicy),r.crossorigin==="use-credentials"?s.credentials="include":r.crossorigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function d(r){if(r.ep)return;r.ep=!0;const s=o(r);fetch(r.href,s)}})();var l=(t=>(t[t.eraser=0]="eraser",t[t.pencil=1]="pencil",t))(l||{}),c=(t=>(t[t.hover=0]="hover",t[t.clickNDrag=1]="clickNDrag",t))(c||{});class g{constructor(e,o){i(this,"size",16);i(this,"gridDOM");i(this,"tool",l.pencil);i(this,"mode",c.clickNDrag);i(this,"clickNDrag",{mouseDown:!1,mouseDownListener:e=>{this.clickNDrag.mouseDown=!0,this.performToolActionOnCell(e.target)},mouseOverListener:e=>{this.clickNDrag.mouseDown===!0&&this.performToolActionOnCell(e.target)},mouseUpListener:()=>{this.clickNDrag.mouseDown=!1}});i(this,"eraseAllCells",()=>{for(const e of this.gridDOM.children)this.erase(e)});i(this,"handleHoverMode",e=>{this.mode===c.hover&&this.performToolActionOnCell(e.target)});i(this,"handleClickNDragMode",e=>{if(this.mode===c.clickNDrag)switch(e.type){case"mousedown":this.clickNDrag.mouseDownListener(e);break;case"mouseover":this.clickNDrag.mouseOverListener(e);break;case"mouseup":this.clickNDrag.mouseUpListener();break}});this.gridDOM=e,o&&this.setSize(o)}insertGridToDOM(){this.appendCells(this.size**2)}changeSize(e){console.time("opt"),this.changeSizeTest(e),console.timeEnd("opt")}changeSizeTest(e){this.setSize(e),this.deleteAllCells(),this.appendCells(e**2)}performToolActionOnCell(e){switch(this.tool){case l.pencil:this.pencilDraw(e);break;case l.eraser:this.erase(e);break}}pencilDraw(e){e.style.backgroundColor="black"}erase(e){e.style.backgroundColor=""}newCell(){const e=document.createElement("div");return e.classList.add("cell"),e.addEventListener("mouseover",this.handleHoverMode),e.addEventListener("mousedown",this.handleClickNDragMode),e.addEventListener("mouseover",this.handleClickNDragMode),e.addEventListener("mouseup",this.handleClickNDragMode),e.ondragstart=()=>!1,e}setSize(e){this.size=e,this.gridDOM.style.setProperty("--size",""+e)}appendCells(e){for(let o=0;o<e;o++)this.gridDOM.append(this.newCell())}deleteAllCells(){this.gridDOM.replaceChildren()}setTool(e){this.tool=e}setMode(e){this.mode=e}}const n=new g(document.querySelector(".cell-grid"));n.insertGridToDOM();const m=document.getElementById("pencil"),p=document.getElementById("eraser"),f=document.getElementById("hover"),k=document.getElementById("click-n-drag"),D=document.getElementById("clear"),v=document.getElementById("size");function y(t){switch(t.target.value){case"pencil":n.setTool(l.pencil);break;case"eraser":n.setTool(l.eraser);break}}function C(t){switch(t.target.value){case"click-n-drag":n.setMode(c.clickNDrag);break;case"hover":n.setMode(c.hover);break}}function L(t){n.changeSizeTest(parseInt(t.target.value))}[m,p].forEach(t=>t.addEventListener("click",y));[f,k].forEach(t=>t.addEventListener("click",C));D.addEventListener("click",n.eraseAllCells);v.addEventListener("change",L);
